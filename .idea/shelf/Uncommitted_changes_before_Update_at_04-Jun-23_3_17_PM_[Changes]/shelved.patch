Index: app/src/main/java/com/example/logintest/SignUpPersonalDetails.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.logintest;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.text.InputType;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport org.jetbrains.annotations.Contract;\r\nimport org.jetbrains.annotations.NotNull;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.security.MessageDigest;\r\nimport java.security.NoSuchAlgorithmException;\r\nimport java.security.SecureRandom;\r\nimport java.util.Objects;\r\nimport java.util.concurrent.atomic.AtomicBoolean;\r\n\r\npublic class SignUpPersonalDetails extends AppCompatActivity {\r\n    EditText editFirstName;\r\n    EditText editLastName;\r\n    EditText editPhoneNum;\r\n    EditText editDOB;\r\n    Button btnRegister;\r\n    TextView alreadyHaveAccountlbl;\r\n\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.fragment_register_pt2);\r\n\r\n        editFirstName = findViewById(R.id.edFirstName);\r\n        editLastName = findViewById(R.id.edLastName);\r\n        editPhoneNum = findViewById(R.id.edPhoneNum);\r\n        editDOB = findViewById(R.id.edDOB);\r\n        btnRegister = findViewById(R.id.register_button);\r\n        alreadyHaveAccountlbl = findViewById(R.id.tvAlreadyHaveAccount);\r\n\r\n        alreadyHaveAccountlbl.setOnClickListener(view -> {\r\n            Intent intent = new Intent(SignUpPersonalDetails.this, LoginActivity.class);\r\n            startActivity(intent);\r\n        });\r\n\r\n        HTTPHandler httpHandler = new HTTPHandler();\r\n        JSONObject params = new JSONObject();\r\n\r\n        btnRegister.setOnClickListener(view -> {\r\n            String firstName = Objects.requireNonNull(editFirstName.getText().toString());\r\n            String lastName = Objects.requireNonNull(editLastName.getText().toString());\r\n            String phoneNum = Objects.requireNonNull(editPhoneNum.getText().toString());\r\n            String DOB = Objects.requireNonNull(editDOB.getText().toString());\r\n            if (firstName.isEmpty() || lastName.isEmpty()||phoneNum.isEmpty()||DOB.isEmpty()){\r\n                System.out.println(\"error\");\r\n                //TODO show popup\r\n            }else{\r\n                Intent j = getIntent();\r\n                String email = j.getStringExtra(\"email\");\r\n                String username = j.getStringExtra(\"username\");\r\n                String password = j.getStringExtra(\"password\");\r\n                String salt = bytesToHex(generateSalt());\r\n                System.out.println(email);\r\n\r\n                try{\r\n                    params.put(\"firstname\",firstName);\r\n                    params.put(\"lastname\",lastName);\r\n                    params.put(\"phone\",phoneNum);\r\n                    params.put(\"dateOfBirth\",DOB);\r\n                    params.put(\"username\",username);\r\n                    params.put(\"password\",password);\r\n                    params.put(\"email\",email);\r\n                    params.put(\"salt\",salt);\r\n                }catch (Exception e){\r\n                    System.out.println(\"Error\");\r\n                    //todo proper error handling\r\n                }\r\n\r\n                AtomicBoolean flag = new AtomicBoolean(false);\r\n                while(!flag.get())\r\n                {\r\n                    String response = httpHandler.postRequest(\"https://lamp.ms.wits.ac.za/home/s2571291/users/insert_users/insertUser.php\", params, String.class);\r\n                    Toast.makeText(SignUpPersonalDetails.this, response, Toast.LENGTH_LONG).show();\r\n\r\n                    if(response.equals(\"Username already exists\")){\r\n                        editFirstName.setError(\"Username already exists\");\r\n                        flag.set(true);\r\n                    }\r\n                    else if(response.equals(\"Salt already exists\")){\r\n                        try {\r\n                            params.put(\"salt\", bytesToHex(generateSalt()));\r\n                        } catch (JSONException e) {\r\n                            throw new RuntimeException(e);\r\n                            //todo proper error handling\r\n                        }\r\n                        flag.set(false);\r\n                    }\r\n                    else{\r\n                        Intent intent = new Intent(SignUpPersonalDetails.this, LoginActivity.class);\r\n                        intent.putExtra(\"sourceActivity\", \"AccountDetails\");\r\n                        flag.set(true);\r\n                        startActivity(intent);\r\n                        finish();\r\n                    }\r\n                }\r\n            }\r\n            });\r\n    }\r\n\r\n\r\n    //generating a random salt and hashing the password\r\n    @NonNull\r\n    private byte[] generateSalt() {\r\n        SecureRandom random = new SecureRandom();\r\n        byte[] salt = new byte[4];\r\n        random.nextBytes(salt);\r\n        return salt;\r\n    }\r\n\r\n    @NonNull\r\n    private byte[] combineSaltAndPassword(@NonNull byte[] salt, @NonNull byte[] password) {\r\n        byte[] saltedPassword = new byte[salt.length + password.length];\r\n        System.arraycopy(salt, 0, saltedPassword, 0, salt.length);\r\n        System.arraycopy(password, 0, saltedPassword, salt.length, password.length);\r\n        return saltedPassword;\r\n    }\r\n\r\n    @NonNull\r\n    private byte[] hashPassword(byte[] saltedPassword) {\r\n        try {\r\n            MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-256\");\r\n            return messageDigest.digest(saltedPassword);\r\n        } catch (NoSuchAlgorithmException e) {\r\n            throw new RuntimeException(\"Error hashing the password.\", e);\r\n        }\r\n    }\r\n\r\n    private final char[] HEX_ARRAY = \"0123456789abcdef\".toCharArray();\r\n\r\n    @Contract(value = \"_ -> new\", pure = true)\r\n    public @NotNull String bytesToHex(@NonNull byte[] bytes) {\r\n        char[] hexChars = new char[bytes.length * 2];\r\n        for (int i = 0; i < bytes.length; i++) {\r\n            int v = bytes[i] & 0xFF;\r\n            hexChars[i * 2] = HEX_ARRAY[v >>> 4];\r\n            hexChars[i * 2 + 1] = HEX_ARRAY[v & 0x0F];\r\n        }\r\n        return new String(hexChars);\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/logintest/SignUpPersonalDetails.java b/app/src/main/java/com/example/logintest/SignUpPersonalDetails.java
--- a/app/src/main/java/com/example/logintest/SignUpPersonalDetails.java	(revision 7f554709a9f142ced48c6ca414f994bc16ff9c0f)
+++ b/app/src/main/java/com/example/logintest/SignUpPersonalDetails.java	(date 1685882536292)
@@ -66,14 +66,14 @@
                 System.out.println(email);
 
                 try{
-                    params.put("firstname",firstName);
-                    params.put("lastname",lastName);
-                    params.put("phone",phoneNum);
-                    params.put("dateOfBirth",DOB);
-                    params.put("username",username);
-                    params.put("password",password);
-                    params.put("email",email);
-                    params.put("salt",salt);
+                    params.put("firstname", firstName);
+                    params.put("lastname", lastName);
+                    params.put("phone", phoneNum);
+                    params.put("dateOfBirth", DOB);
+                    params.put("username", username);
+                    params.put("password", bytesToHex(hashPassword(combineSaltAndPassword(salt.getBytes(), password.getBytes()))));
+                    params.put("email", email);
+                    params.put("salt", salt);
                 }catch (Exception e){
                     System.out.println("Error");
                     //todo proper error handling
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\" >\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.RetailBunny\"\r\n        tools:targetApi=\"31\" >\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\" >\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".LoginActivity\" />\r\n        <activity android:name=\".SignUpAccountDetails\" />\r\n        <activity android:name=\".SignUpPersonalDetails\" />\r\n        <activity android:name=\".HomePage\" />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 7f554709a9f142ced48c6ca414f994bc16ff9c0f)
+++ b/app/src/main/AndroidManifest.xml	(date 1685884365340)
@@ -24,7 +24,6 @@
             </intent-filter>
         </activity>
         <activity android:name=".LoginActivity" />
-        <activity android:name=".SignUpAccountDetails" />
         <activity android:name=".SignUpPersonalDetails" />
         <activity android:name=".HomePage" />
     </application>
Index: app/src/main/java/com/example/logintest/SignUpAccountDetails.java
===================================================================
diff --git a/app/src/main/java/com/example/logintest/SignUpAccountDetails.java b/app/src/main/java/com/example/logintest/SignUpAccountDetails.java
deleted file mode 100644
--- a/app/src/main/java/com/example/logintest/SignUpAccountDetails.java	(revision 7f554709a9f142ced48c6ca414f994bc16ff9c0f)
+++ /dev/null	(revision 7f554709a9f142ced48c6ca414f994bc16ff9c0f)
@@ -1,161 +0,0 @@
-package com.example.logintest;
-
-import android.content.Intent;
-import android.os.Bundle;
-import android.text.Editable;
-import android.text.TextWatcher;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.TextView;
-
-import androidx.appcompat.app.AppCompatActivity;
-import java.util.Objects;
-
-public class SignUpAccountDetails extends AppCompatActivity {
-    EditText editEmail;
-    EditText editUsername;
-    EditText editPassword;
-    EditText confirmPasswordTv;
-    Button btnNext;
-    TextView alreadyHaveAccountlbl;
-
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.fragment_register);
-
-        editEmail = findViewById(R.id.edEmailRegister);;
-        editUsername = findViewById(R.id.edUsernameRegister);
-        editPassword = findViewById(R.id.edPasswordRegister);
-        confirmPasswordTv = findViewById(R.id.edPasswordConfirmRegister);
-        btnNext = findViewById(R.id.next_button);
-        alreadyHaveAccountlbl = findViewById(R.id.tvLogin);
-
-        alreadyHaveAccountlbl.setOnClickListener( view->{
-            Intent intent = new Intent(SignUpAccountDetails.this, LoginActivity.class);
-            startActivity(intent);
-        }
-        );
-
-        btnNext.setOnClickListener(view -> {
-            //check if all input edit texts have their errors enabled. If no, then proceed to next activity
-                String email = Objects.requireNonNull(editEmail.getText()).toString();
-                String username = Objects.requireNonNull(editUsername.getText()).toString();
-                String password = Objects.requireNonNull(editPassword.getText()).toString();
-                String confirmPassword = Objects.requireNonNull(confirmPasswordTv.getText()).toString();
-
-
-                if (!password.equals(confirmPassword)
-                        || email.isEmpty()
-                        || username.isEmpty()
-                        || password.isEmpty()
-                        || !email.matches("^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$")
-                ){
-                    System.out.println("error");
-                    //TODO show popup
-                }else{
-                    Intent intent = new Intent(SignUpAccountDetails.this, SignUpPersonalDetails.class);
-                    intent.putExtra("email", email);
-                    intent.putExtra("username", username);
-                    intent.putExtra("password", password);
-                    intent.putExtra("sourceActivity", "PersonalDetails");
-                    startActivity(intent);
-                }
-            });
-
-        editEmail.addTextChangedListener(new TextWatcher() {
-            @Override
-            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
-            }
-
-            @Override
-            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
-                String email = Objects.requireNonNull(editEmail.getText()).toString();
-                if(email.isEmpty()) {
-                    editEmail.setError("Email cannot be empty");
-                }
-                else if(!email.matches("^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$")) {
-                    editEmail.setError("Invalid email");
-                }
-            }
-
-            @Override
-            public void afterTextChanged(Editable editable) {
-            }
-        });
-
-        editUsername.addTextChangedListener(new TextWatcher() {
-            @Override
-            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
-
-            }
-
-            @Override
-            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
-                String username = Objects.requireNonNull(editUsername.getText()).toString();
-                if(username.isEmpty()) {
-                    editUsername.setError("Username cannot be empty");
-                }
-                else if(!username.matches("^(?!.*\\..*\\.)[\\p{Alnum}.]{1,20}$")) {
-                    editUsername.setError("Username can only have letters, numbers, and the following special characters: _ - . @");
-                }
-            }
-
-            @Override
-            public void afterTextChanged(Editable editable) {
-
-            }
-        });
-
-        editPassword.addTextChangedListener(new TextWatcher() {
-            @Override
-            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
-            }
-
-            @Override
-            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
-                String password = Objects.requireNonNull(editPassword.getText()).toString();
-
-                if(password.isEmpty()) {
-                    editPassword.setError("Password cannot be empty");
-                }
-                else if(password.length() < 8) {
-                    editPassword.setError("Password must be at least 8 characters long");
-                }
-                //password must contain at least one uppercase letter, one lowercase letter, one number, and one special character
-                else if(!password.matches("^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$")) {
-                    editPassword.setError("Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character");
-                }
-            }
-
-            @Override
-            public void afterTextChanged(Editable editable) {
-
-            }
-        });
-
-        confirmPasswordTv.addTextChangedListener(new TextWatcher() {
-            @Override
-            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
-            }
-
-            @Override
-            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
-                String password = Objects.requireNonNull(confirmPasswordTv.getText()).toString();
-
-                if(password.isEmpty()) {
-                    confirmPasswordTv.setError("Password cannot be empty");
-                }
-                else if(!password.equals(editPassword.getText().toString())) {
-                    confirmPasswordTv.setError("Passwords must match");
-                }
-            }
-
-            @Override
-            public void afterTextChanged(Editable editable) {
-
-            }
-        });
-
-
-    }
-}
Index: app/src/main/res/layout/fragment_register_pt2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n\r\n\r\n    <ImageView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:scaleType=\"centerCrop\"\r\n        android:background=\"@drawable/yellow_rectangle_bg_2\"\r\n        />\r\n\r\n    <TextView\r\n        android:id=\"@+id/tvAlmostThere\"\r\n        style=\"@style/h4\"\r\n        android:layout_width=\"match_parent\"\r\n        android:gravity=\"center\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Almost done...\"\r\n        android:textSize=\"30dp\"\r\n        android:layout_marginTop=\"90dp\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        />\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/layout_regpt2\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/tvAlmostThere\"\r\n        android:layout_marginTop=\"80dp\"\r\n\r\n        >\r\n\r\n        <EditText\r\n            android:id=\"@+id/edFirstName\"\r\n            style=\"@style/editText\"\r\n            android:layout_width=\"148dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginLeft=\"50dp\"\r\n            android:layout_marginRight=\"10dp\"\r\n            android:backgroundTint=\"@color/grey_2\"\r\n            android:hint=\"First Name\"\r\n            android:inputType=\"textPersonName\"\r\n\r\n\r\n            android:padding=\"10dp\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edLastName\"\r\n            style=\"@style/editText\"\r\n            android:layout_width=\"148dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginLeft=\"0dp\"\r\n            android:layout_marginRight=\"50dp\"\r\n            android:backgroundTint=\"@color/grey_2\"\r\n            android:hint=\"Last Name\"\r\n            android:inputType=\"textPersonName\"\r\n\r\n            android:padding=\"10dp\" />\r\n\r\n    </LinearLayout>\r\n\r\n    <EditText\r\n        android:id=\"@+id/edPhoneNum\"\r\n        android:layout_width=\"300dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:hint=\"+27\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/layout_regpt2\"\r\n        android:layout_marginTop=\"20dp\"\r\n        android:inputType=\"phone\"\r\n        app:prefixText = \"+27\"\r\n        android:textSize=\"21dp\"\r\n        android:background=\"@color/grey_2\"\r\n        android:padding=\"10dp\"\r\n        android:drawableLeft=\"@drawable/baseline_local_phone_24\"\r\n        android:drawablePadding=\"10dp\"\r\n        android:maxLength=\"9\"\r\n        />\r\n\r\n    <EditText\r\n        android:id=\"@+id/edDOB\"\r\n        android:layout_width=\"300dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:inputType=\"date\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/edPhoneNum\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        android:layout_marginTop=\"20dp\"\r\n        android:hint=\"Date of Birth\"\r\n\r\n        android:background=\"@color/grey_2\"\r\n        android:padding=\"10dp\"\r\n        android:drawableLeft=\"@drawable/baseline_calendar_month_24\"\r\n        android:drawablePadding=\"10dp\"\r\n        android:textSize=\"21dp\"\r\n\r\n        />\r\n\r\n    <androidx.appcompat.widget.AppCompatButton\r\n        android:id=\"@+id/register_button\"\r\n        android:layout_width=\"300dp\"\r\n        android:layout_marginLeft=\"30dp\"\r\n        android:layout_marginRight=\"30dp\"\r\n        android:layout_marginTop=\"60dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        style=\"@style/blueButtonStyle\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/edDOB\"\r\n        app:layout_constraintStart_toStartOf=\"@id/edDOB\"\r\n        app:layout_constraintEnd_toEndOf=\"@id/edDOB\"\r\n\r\n\r\n        android:text=\"Register\"\r\n        />\r\n\r\n\r\n    <TextView\r\n        android:id=\"@+id/tvAlreadyHaveAccount\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Already have an account? Login\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        android:layout_marginBottom=\"50dp\"\r\n        android:textSize=\"17dp\"\r\n        />\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_register_pt2.xml b/app/src/main/res/layout/fragment_register_pt2.xml
--- a/app/src/main/res/layout/fragment_register_pt2.xml	(revision 7f554709a9f142ced48c6ca414f994bc16ff9c0f)
+++ b/app/src/main/res/layout/fragment_register_pt2.xml	(date 1685882232677)
@@ -71,8 +71,7 @@
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintTop_toBottomOf="@id/layout_regpt2"
         android:layout_marginTop="20dp"
-        android:inputType="phone"
-        app:prefixText = "+27"
+        android:inputType="number"
         android:textSize="21dp"
         android:background="@color/grey_2"
         android:padding="10dp"
